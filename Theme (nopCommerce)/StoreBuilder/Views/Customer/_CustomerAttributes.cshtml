@model IList<Nop.Web.Models.Customer.CustomerAttributeModel>
@using Nop.Core.Domain.Catalog;
@foreach (var attribute in Model)
{
    string controlId = string.Format("customer_attribute_{0}", attribute.Id);
    string textPrompt = attribute.Name;

        <label>@textPrompt:</label>
        
        switch (attribute.AttributeControlType)
        {
            case AttributeControlType.DropdownList:
            {
            <select name="@(controlId)" id="@(controlId)" class="form-control">
                @if (!attribute.IsRequired)
                    {
                    <option value="0">---</option>
                    }
                @foreach (var attributeValue in attribute.Values)
                    {
                    <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                    }
            </select>
            }
                break;
            case AttributeControlType.RadioList:
            {
            <ul class="option-list">
                @foreach (var attributeValue in attribute.Values)
                    {
                        <li>
                            <div class="radio">
                                <label for="@(controlId)_@(attributeValue.Id)" class="control-label">
                                    <input type="radio" name="@(controlId)" id="@(controlId)_@(attributeValue.Id)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                                    @attributeValue.Name
                                </label>
                            </div>
                        </li>
                    }
            </ul>
            }
            break;
            case AttributeControlType.Checkboxes:
            case AttributeControlType.ReadonlyCheckboxes:
            {
            <ul class="option-list">
                @foreach (var attributeValue in attribute.Values)
                    {
                        <li>
                            <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                            <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                        </li>
                    }
            </ul>
            }
            break;
            case AttributeControlType.TextBox:
            {
                <input name="@(controlId)" type="text" class="form-control" id="@(controlId)" value="@attribute.DefaultValue" />
            }
            break;
            case AttributeControlType.MultilineTextbox:
            {
            <textarea id="@(controlId)" class="form-control" name="@(controlId)">@attribute.DefaultValue</textarea>
            }
            break;
            case AttributeControlType.Datepicker:
            case AttributeControlType.FileUpload:
            case AttributeControlType.ColorSquares:
            {
                //not support attribute type
            }
            break;
        }
        if (attribute.IsRequired)
        {
            @Html.RequiredHint()
        }
}
